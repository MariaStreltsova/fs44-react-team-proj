{"version":3,"file":"static/js/242.40e76ed9.chunk.js","mappings":"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","sources":["components/Buttons/AuthButtons/loginBtn/UniversalBtn.jsx","components/Forms/LoginForm/LoginForm.styles.js","components/Forms/inputs/Input/Input.styles.js","components/Forms/inputs/Input/Input.jsx","components/Forms/inputs/SecurInput/SecurInput.styles.js","components/Forms/inputs/SecurInput/SecurInput.jsx","images/icons/icon-form/Email.jsx","images/icons/icon-form/LockPs.jsx","images/icons/icon-form/User.jsx","components/Forms/RegistrationForm/RegistrationForm.styles.js","components/Forms/RegistrationForm/PasswordStrengthMeter.js","components/Forms/RegistrationForm/RegistrationForm.jsx","pages/Registration/Registration.styled.js","pages/Registration/Registration.jsx"],"sourcesContent":["import Button from '@mui/material/Button';\nexport const UniversalBtn = ({\n  title = '',\n  variant = 'contained',\n  type = 'button',\n  color = 'primary',\n  href = '',\n  disabled = false,\n  mb = '20px',\n  width = '300px',\n}) => {\n  return (\n    <Button\n      variant={variant}\n      type={type}\n      disabled={disabled}\n      href={href}\n      style={{\n        width: `${width}`,\n        height: '50px',\n        borderRadius: '20px',\n        backgroundColor: `${color}`,\n        marginBottom: `${mb}`,\n      }}\n    >\n      {title}\n    </Button>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-betweem;\n  align-items: center;\n  width: 410px;\nmargin-top: 60px;\n\n@media screen and (max-width: 767px) {\n    max-width: 320px;\n    margin-left: auto;\n    margin-right: auto;\n    padding-left: 20px;\n    padding-right: 20px;\n  }\n\n  @media screen and (max-width: 1279px) {\n    width: 410px;\n  }\n  \n`;\n","import FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport Input from '@mui/material/Input';\nimport { styled } from '@mui/system';\n\nexport const InputForm = styled(FormControl)({\n  '&:hover': {\n    color: '#4a56e2',\n  },\n});\n\nexport const InputLabelName = styled(InputLabel)({\n  color: '#E0E0E0',\n});\n\nexport const InputLabelForm = styled(Input)({\n  borderBottom: '2px solid #e7eaf2',\n  '&::before': {\n    borderBottom: 'none',\n  },\n});\n","import InputAdornment from '@mui/material/InputAdornment';\nimport { InputForm, InputLabelForm } from './Input.styles';\nimport { FormHelperText } from '@mui/material';\nexport const Input = ({\n  icon = null,\n  label = '',\n  value,\n  mb = 0,\n  id = '',\n  onChange,\n  error,\n  helper\n}) => {\n  return (\n    <InputForm\n    variant=\"standard\"\n      style={{ width: '100%', marginBottom: `${mb}px` }}\n    >\n      <InputLabelForm\n        onChange={onChange}\n        id={id}\n        name={id}\n        value={value}\n        error={error}\n        placeholder={label}\n        startAdornment={\n          <InputAdornment position=\"start\">{icon && icon()}</InputAdornment>\n        }\n      />\n      {error && <FormHelperText name={id} style={{color: \"red\"}}>{helper}</FormHelperText>}\n    </InputForm>\n  );\n};\n","import { styled } from '@mui/system';\nimport FormControl from '@mui/material/FormControl';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport Input from '@mui/material/Input';\nimport IconButton from '@mui/material/IconButton';\n\nexport const ButtonRegistr = styled(Button)({\n  width: '300px',\n  backgroundColor: '#24CCA7',\n  borderRadius: '20px',\n  height: '50px',\n  '&:hover': {\n    backgroundColor: '#4a56e2',\n  },\n});\n\nexport const ButtonLogin = styled(Button)({\n  width: '300px',\n  border: '1px solid #4A56E2',\n  color: '#4A56E2',\n  borderRadius: '20px',\n  height: '50px',\n  '&:hover': {\n    color: '#fff',\n    backgroundColor: '#4a56e2',\n  },\n});\n\nexport const BoxBottoms = styled(Box)({\n  // margin: \"40px 0px 0px 0px\",\n  width: '220px',\n  height: '120px',\n  margin: '50px 0px 0px 0px',\n  display: 'inline-flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  marginLeft: 'auto',\n  marginRight: 'auto',\n});\n\nexport const InputForm = styled(FormControl)({\n  '&:hover': {\n    color: '#4a56e2',\n  },\n});\n\nexport const InputLabelForm = styled(Input)({\n  borderBottom: '2px solid #e7eaf2',\n  '&::before': {\n    borderBottom: 'none',\n  },\n});\n\nexport const InputLabelName = styled(InputLabel)({\n  color: '#E0E0E0',\n});\nexport const IconColorButtom = styled(IconButton)({\n  color: '#E0E0E0',\n});\n","import { useState } from 'react';\nimport FormControl from '@mui/material/FormControl';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport { IconColorButtom, InputLabelForm } from './SecurInput.styles';\nimport { FormHelperText } from '@mui/material';\n\nexport const SecurInput = ({\n  label = '',\n  icon = null,\n  mb = 0,\n  id = '',\n  value,\n  onChange,\n  error,\n  helper,\n}) => {\n  const [values, setValues] = useState({\n    email: '',\n    password: '',\n    confirmpassword: '',\n    name: '',\n    showPassword: false,\n    showConfirmPassword: false,\n  });\n\n  // const handleChange = prop => event => {\n  //   setValues({ ...values, [prop]: event.target.value });\n  // };\n\n  const handleClickShowPassword = () => {\n    setValues({\n      ...values,\n      showPassword: !values.showPassword,\n    });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return (\n    <FormControl\n      sx={{ m: 1, width: '100%', marginBottom: `${mb}px` }}\n      variant=\"standard\"\n    >\n      <InputLabelForm\n        id={id}\n        type={values.showPassword ? 'text' : 'password'}\n        value={value}\n        onChange={onChange}\n        error={error}\n        placeholder={label}\n        startAdornment={\n          <InputAdornment position=\"start\">{icon && icon()}</InputAdornment>\n        }\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <IconColorButtom\n              aria-label=\"toggle password visibility\"\n              onClick={handleClickShowPassword}\n              onMouseDown={handleMouseDownPassword}\n            >\n              {values.showPassword ? <VisibilityOff /> : <Visibility />}\n            </IconColorButtom>\n          </InputAdornment>\n        }\n      />\n      {error && <FormHelperText name={id} style={{color: \"red\"}}>{helper}</FormHelperText>}\n    </FormControl>\n  );\n};\n","export const EmailIcon = () => {\n  return (\n    <svg\n      width=\"25\"\n      height=\"24\"\n      viewBox=\"0 0 25 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g clipPath=\"url(#clip0_3_982)\">\n        <path\n          d=\"M20.5 4H4.5C3.4 4 2.51 4.9 2.51 6L2.5 18C2.5 19.1 3.4 20 4.5 20H20.5C21.6 20 22.5 19.1 22.5 18V6C22.5 4.9 21.6 4 20.5 4ZM20.5 8L12.5 13L4.5 8V6L12.5 11L20.5 6V8Z\"\n          fill=\"#E0E0E0\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_3_982\">\n          <rect\n            width=\"24\"\n            height=\"24\"\n            fill=\"white\"\n            transform=\"translate(0.5)\"\n          />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n};\n","export const PasswordIcon = () => {\n  return (\n    <svg\n      width=\"25\"\n      height=\"24\"\n      viewBox=\"0 0 25 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g clipPath=\"url(#clip0_3_969)\">\n        <path\n          d=\"M18.5 8H17.5V6C17.5 3.24 15.26 1 12.5 1C9.74 1 7.5 3.24 7.5 6V8H6.5C5.4 8 4.5 8.9 4.5 10V20C4.5 21.1 5.4 22 6.5 22H18.5C19.6 22 20.5 21.1 20.5 20V10C20.5 8.9 19.6 8 18.5 8ZM12.5 17C11.4 17 10.5 16.1 10.5 15C10.5 13.9 11.4 13 12.5 13C13.6 13 14.5 13.9 14.5 15C14.5 16.1 13.6 17 12.5 17ZM15.6 8H9.4V6C9.4 4.29 10.79 2.9 12.5 2.9C14.21 2.9 15.6 4.29 15.6 6V8Z\"\n          fill=\"#E0E0E0\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_3_969\">\n          <rect\n            width=\"24\"\n            height=\"24\"\n            fill=\"white\"\n            transform=\"translate(0.5)\"\n          />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n};\n","export const UserIcon = () => {\n  return (\n    <svg\n      width=\"25\"\n      height=\"24\"\n      viewBox=\"0 0 25 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g clipPath=\"url(#clip0_3_1000)\">\n        <path\n          d=\"M3.5 5V19C3.5 20.1 4.39 21 5.5 21H19.5C20.6 21 21.5 20.1 21.5 19V5C21.5 3.9 20.6 3 19.5 3H5.5C4.39 3 3.5 3.9 3.5 5ZM15.5 9C15.5 10.66 14.16 12 12.5 12C10.84 12 9.5 10.66 9.5 9C9.5 7.34 10.84 6 12.5 6C14.16 6 15.5 7.34 15.5 9ZM6.5 17C6.5 15 10.5 13.9 12.5 13.9C14.5 13.9 18.5 15 18.5 17V18H6.5V17Z\"\n          fill=\"#E0E0E0\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_3_1000\">\n          <rect\n            width=\"24\"\n            height=\"24\"\n            fill=\"white\"\n            transform=\"translate(0.5)\"\n          />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 410px;\n  gap: 40px;\nmargin-top: 60px;\n\n \n  @media screen and (max-width: 767px) {\n    max-width: 320px;\n    margin-left: auto;\n    margin-right: auto;\n    padding-left: 20px;\n    padding-right: 20px;\n  }\n\n   @media screen and (max-width: 1279px) {\n    width: 410px;\n  }\n`;\n\nexport const PasswordBarStyle = styled.div`\n  background-color: #e5f1ef;\n  width: 100%;\n  height: 4px;\n  margin-top: -15px;\n`;\n\n// export const PasswordBar = styled(PasswordStrengthBar)`\n//   width: 100%;\n// `;","import React from 'react';\nimport zxcvbn from 'zxcvbn';\n\nimport { PasswordBarStyle } from './RegistrationForm.styles';\nconst PasswordStrenghtMeter = ({ password }) => {\n  const passwordtest = zxcvbn(password);\n  const num = (passwordtest.score * 100) / 4;\n\n  const funcProgressColor = () => {\n    switch (passwordtest.score) {\n      case 0:\n        return '#FF6596';\n      case 1:\n        return '#FF6596';\n      case 2:\n        return '#EAC789';\n      case 3:\n        return '#EAC789';\n      case 4:\n        return '#24CCA7';\n      default:\n        return 'none';\n    }\n  };\n\n  const changeStyleProgress = () => ({\n    width: '100%',\n    height: '5px',\n  });\n\n  const changePasswordColor = () => ({\n    width: `${num}%`,\n    height: '4px',\n    background: funcProgressColor(),\n    borderRadius: '4px',\n  });\n\n  return (\n    <>\n      <PasswordBarStyle style={changeStyleProgress()}>\n        <div className=\"progress-bar\" style={changePasswordColor()}></div>\n      </PasswordBarStyle>\n    </>\n  );\n};\n\nexport default PasswordStrenghtMeter;\n","import { Container } from '../LoginForm/LoginForm.styles';\nimport { EmailIcon } from 'images/icons/icon-form/Email';\nimport { PasswordIcon } from '../../../images/icons/icon-form/LockPs';\nimport { UserIcon } from '../../../images/icons/icon-form/User';\nimport { FormLogo } from '../FormsLogo/formLogo';\nimport { SecurInput } from '../inputs/SecurInput/SecurInput';\nimport { Input } from '../inputs/Input/Input';\nimport { UniversalBtn } from 'components/Buttons/AuthButtons/loginBtn/UniversalBtn';\nimport { useNavigate } from 'react-router-dom';\nimport { Form } from './RegistrationForm.styles';\n\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { BASE_URL_FRONT } from 'baseUrl/baseUrl';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\nimport PasswordStrenghtMeter from './PasswordStrengthMeter';\nimport { t } from 'i18next';\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string()\n    .matches(/\\b[\\w.-]+@[\\w.-]+\\.\\w{2,4}\\b/, 'Тестировщик, ты молодец!')\n    .required(t('validation.email')),\n  password: Yup.string()\n    .min(6, t('validation.minPasswordLength'))\n    .max(12, t('validation.maxPasswordLength'))\n    .required(t('validation.password')),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref('password')], t('validation.passwordMatch'))\n    .required(t('validation.confirmPassword')),\n  name: Yup.string().required(t('validation.firstName')),\n});\n\nexport const RegistrationForm = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      name: '',\n    },\n    validationSchema,\n    onSubmit: ({ email, password, name }, { resetForm }) => {\n      dispatch(authOperations.register({ email, password, name }));\n      navigate('/login');\n      resetForm();\n    },\n  });\n\n  return (\n    <Container>\n      <FormLogo mb={40} />\n      <Form onSubmit={formik.handleSubmit}>\n        <Input\n          label={t('input.email')}\n          icon={EmailIcon}\n          id={'email'}\n          onBlur={formik.handleBlur}\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helper={formik.errors.email}\n        />\n        <SecurInput\n          label={t('input.password')}\n          icon={PasswordIcon}\n          onBlur={formik.handleBlur}\n          id={'password'}\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          helper={formik.errors.password}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n        />\n        <SecurInput\n          label={t('input.confirmPassword')}\n          icon={PasswordIcon}\n          onBlur={formik.handleBlur}\n          id={'confirmPassword'}\n          value={formik.values.confirmPassword}\n          onChange={formik.handleChange}\n          helper={formik.errors.confirmPassword}\n          error={\n            formik.touched.password && Boolean(formik.errors.confirmPassword)\n          }\n        />\n\n        {formik.values.password && (\n          <PasswordStrenghtMeter password={formik.values.password} />\n        )}\n\n        <Input\n          label={t('input.firstName')}\n          icon={UserIcon}\n          onBlur={formik.handleBlur}\n          id={'name'}\n          value={formik.values.name}\n          helper={formik.errors.name}\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n        />\n\n        <UniversalBtn\n          title={t('button.register')}\n          variant=\"contained\"\n          type=\"submit\"\n          color=\"#24CCA7\"\n        />\n      </Form>\n      <UniversalBtn\n        title={t('button.login')}\n        variant=\"outlined\"\n        mb=\"0px\"\n        href={`${BASE_URL_FRONT}/login`}\n      />\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  /* width: 533px; */\n\n  padding: 40px 60px;\n  display: flex;\n\n  display: flex;\n  justify-content: center;\n  background-color: #ffffff;\n  border-radius: 20px;\n  @media screen and (max-width: 767px) {\n    padding: 0;\n  }\n`;\n","import { RegistrationForm } from 'components/Forms/RegistrationForm/RegistrationForm';\nimport { Container } from './Registration.styled';\n\nconst Registration = () => {\n  return (\n    <Container>\n      <RegistrationForm />\n    </Container>\n  );\n};\n\nexport default Registration;\n"],"names":["UniversalBtn","title","variant","type","color","href","disabled","mb","width","style","height","borderRadius","backgroundColor","marginBottom","Container","styled","Form","InputForm","FormControl","InputLabelForm","InputLabel","Input","borderBottom","icon","label","value","id","onChange","error","helper","name","placeholder","startAdornment","InputAdornment","position","FormHelperText","Button","border","Box","margin","display","flexDirection","alignItems","justifyContent","marginLeft","marginRight","IconColorButtom","IconButton","SecurInput","useState","email","password","confirmpassword","showPassword","showConfirmPassword","values","setValues","sx","m","endAdornment","onClick","onMouseDown","event","preventDefault","VisibilityOff","Visibility","EmailIcon","viewBox","fill","xmlns","clipPath","d","transform","PasswordIcon","UserIcon","PasswordBarStyle","passwordtest","zxcvbn","num","score","funcProgressColor","className","background","validationSchema","Yup","shape","matches","required","t","min","max","confirmPassword","oneOf","RegistrationForm","useTranslation","dispatch","useDispatch","navigate","useNavigate","formik","useFormik","initialValues","onSubmit","resetForm","authOperations","handleSubmit","I","onBlur","handleBlur","handleChange","touched","Boolean","errors","BASE_URL_FRONT"],"sourceRoot":""}